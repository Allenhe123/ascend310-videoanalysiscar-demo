#   =======================================================================
#
# Copyright (C) 2018, Hisilicon Technologies Co., Ltd. All Rights Reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
#   1 Redistributions of source code must retain the above copyright notice,
#     this list of conditions and the following disclaimer.
#
#   2 Redistributions in binary form must reproduce the above copyright notice,
#     this list of conditions and the following disclaimer in the documentation
#     and/or other materials provided with the distribution.
#
#   3 Neither the names of the copyright holders nor the names of the
#   contributors may be used to endorse or promote products derived from this
#   software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#   =======================================================================
#
'''
Generated by the protocol buffer compiler.  DO NOT EDIT!
source: video_analysis_message.proto
'''
import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='video_analysis_message.proto',
  package='ascend.presenter.video_analysis',
  syntax='proto3',
  serialized_pb=_b('\n\x1cvideo_analysis_message.proto\x12\x1f\x61scend.presenter.video_analysis\"\'\n\x0bRegisterApp\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\"Z\n\x0e\x43ommonResponse\x12\x37\n\x03ret\x18\x01 \x01(\x0e\x32*.ascend.presenter.video_analysis.ErrorCode\x12\x0f\n\x07message\x18\x02 \x01(\t\"X\n\nFrameIndex\x12\x0e\n\x06\x61pp_id\x18\x01 \x01(\t\x12\x12\n\nchannel_id\x18\x02 \x01(\t\x12\x14\n\x0c\x63hannel_name\x18\x03 \x01(\t\x12\x10\n\x08\x66rame_id\x18\x04 \x01(\t\"7\n\x06Object\x12\n\n\x02id\x18\x01 \x01(\t\x12\x12\n\nconfidence\x18\x02 \x01(\x02\x12\r\n\x05image\x18\x03 \x01(\x0c\"\x9a\x01\n\x08ImageSet\x12@\n\x0b\x66rame_index\x18\x01 \x01(\x0b\x32+.ascend.presenter.video_analysis.FrameIndex\x12\x13\n\x0b\x66rame_image\x18\x02 \x01(\x0c\x12\x37\n\x06object\x18\x03 \x03(\x0b\x32\'.ascend.presenter.video_analysis.Object\"\xcd\x01\n\x12\x43\x61rInferenceResult\x12@\n\x0b\x66rame_index\x18\x01 \x01(\x0b\x32+.ascend.presenter.video_analysis.FrameIndex\x12\x11\n\tobject_id\x18\x02 \x01(\t\x12?\n\x04type\x18\x03 \x01(\x0e\x32\x31.ascend.presenter.video_analysis.CarInferenceType\x12\x12\n\nconfidence\x18\x04 \x01(\x02\x12\r\n\x05value\x18\x05 \x01(\t\"%\n\x07MapType\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x02\"\xad\x01\n\x14HumanInferenceResult\x12@\n\x0b\x66rame_index\x18\x01 \x01(\x0b\x32+.ascend.presenter.video_analysis.FrameIndex\x12\x11\n\tobject_id\x18\x02 \x01(\t\x12@\n\x0ehuman_property\x18\x03 \x03(\x0b\x32(.ascend.presenter.video_analysis.MapType\"\xcf\x01\n\x13\x46\x61\x63\x65InferenceResult\x12@\n\x0b\x66rame_index\x18\x01 \x01(\x0b\x32+.ascend.presenter.video_analysis.FrameIndex\x12\x11\n\tobject_id\x18\x02 \x01(\t\x12@\n\x04type\x18\x03 \x01(\x0e\x32\x32.ascend.presenter.video_analysis.FaceInferenceType\x12\x12\n\nconfidence\x18\x04 \x01(\x02\x12\r\n\x05value\x18\x05 \x01(\t*\xdf\x01\n\tErrorCode\x12\x0e\n\nkErrorNone\x10\x00\x12\x1a\n\x16kErrorAppRegisterExist\x10\x01\x12\x1e\n\x1akErrorAppRegisterNoStorage\x10\x02\x12\x19\n\x15kErrorAppRegisterType\x10\x03\x12\x1a\n\x16kErrorAppRegisterLimit\x10\x04\x12\x13\n\x0fkErrorAppDelete\x10\x05\x12\x11\n\rkErrorAppLost\x10\x06\x12\x16\n\x12kErrorStorageLimit\x10\x07\x12\x0f\n\x0bkErrorOther\x10\x08*0\n\x10\x43\x61rInferenceType\x12\r\n\tkCarColor\x10\x00\x12\r\n\tkCarBrand\x10\x01*2\n\x11\x46\x61\x63\x65InferenceType\x12\x0c\n\x08kFaceAge\x10\x00\x12\x0f\n\x0bkFaceGender\x10\x01\x62\x06proto3')
)

_ERRORCODE = _descriptor.EnumDescriptor(
  name='ErrorCode',
  full_name='ascend.presenter.video_analysis.ErrorCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='kErrorNone', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kErrorAppRegisterExist', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kErrorAppRegisterNoStorage', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kErrorAppRegisterType', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kErrorAppRegisterLimit', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kErrorAppDelete', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kErrorAppLost', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kErrorStorageLimit', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kErrorOther', index=8, number=8,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1136,
  serialized_end=1359,
)
_sym_db.RegisterEnumDescriptor(_ERRORCODE)

ErrorCode = enum_type_wrapper.EnumTypeWrapper(_ERRORCODE)
_CARINFERENCETYPE = _descriptor.EnumDescriptor(
  name='CarInferenceType',
  full_name='ascend.presenter.video_analysis.CarInferenceType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='kCarColor', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kCarBrand', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kCarPlate', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1361,
  serialized_end=1424,
)
_sym_db.RegisterEnumDescriptor(_CARINFERENCETYPE)

CarInferenceType = enum_type_wrapper.EnumTypeWrapper(_CARINFERENCETYPE)
_FACEINFERENCETYPE = _descriptor.EnumDescriptor(
  name='FaceInferenceType',
  full_name='ascend.presenter.video_analysis.FaceInferenceType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='kFaceAge', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='kFaceGender', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1426,
  serialized_end=1476,
)
_sym_db.RegisterEnumDescriptor(_FACEINFERENCETYPE)

FaceInferenceType = enum_type_wrapper.EnumTypeWrapper(_FACEINFERENCETYPE)
kErrorNone = 0
kErrorAppRegisterExist = 1
kErrorAppRegisterNoStorage = 2
kErrorAppRegisterType = 3
kErrorAppRegisterLimit = 4
kErrorAppDelete = 5
kErrorAppLost = 6
kErrorStorageLimit = 7
kErrorOther = 8
kCarColor = 0
kCarBrand = 1
kCarPlate = 2
kFaceAge = 0
kFaceGender = 1



_REGISTERAPP = _descriptor.Descriptor(
  name='RegisterApp',
  full_name='ascend.presenter.video_analysis.RegisterApp',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ascend.presenter.video_analysis.RegisterApp.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='ascend.presenter.video_analysis.RegisterApp.type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=65,
  serialized_end=104,
)


_COMMONRESPONSE = _descriptor.Descriptor(
  name='CommonResponse',
  full_name='ascend.presenter.video_analysis.CommonResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ret', full_name='ascend.presenter.video_analysis.CommonResponse.ret', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='ascend.presenter.video_analysis.CommonResponse.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=106,
  serialized_end=196,
)


_FRAMEINDEX = _descriptor.Descriptor(
  name='FrameIndex',
  full_name='ascend.presenter.video_analysis.FrameIndex',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='app_id', full_name='ascend.presenter.video_analysis.FrameIndex.app_id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_id', full_name='ascend.presenter.video_analysis.FrameIndex.channel_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='channel_name', full_name='ascend.presenter.video_analysis.FrameIndex.channel_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='frame_id', full_name='ascend.presenter.video_analysis.FrameIndex.frame_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=198,
  serialized_end=286,
)


_OBJECT = _descriptor.Descriptor(
  name='Object',
  full_name='ascend.presenter.video_analysis.Object',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='ascend.presenter.video_analysis.Object.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='ascend.presenter.video_analysis.Object.confidence', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image', full_name='ascend.presenter.video_analysis.Object.image', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=288,
  serialized_end=343,
)


_IMAGESET = _descriptor.Descriptor(
  name='ImageSet',
  full_name='ascend.presenter.video_analysis.ImageSet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='frame_index', full_name='ascend.presenter.video_analysis.ImageSet.frame_index', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='frame_image', full_name='ascend.presenter.video_analysis.ImageSet.frame_image', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='object', full_name='ascend.presenter.video_analysis.ImageSet.object', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=346,
  serialized_end=500,
)


_CARINFERENCERESULT = _descriptor.Descriptor(
  name='CarInferenceResult',
  full_name='ascend.presenter.video_analysis.CarInferenceResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='frame_index', full_name='ascend.presenter.video_analysis.CarInferenceResult.frame_index', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='object_id', full_name='ascend.presenter.video_analysis.CarInferenceResult.object_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='ascend.presenter.video_analysis.CarInferenceResult.type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='ascend.presenter.video_analysis.CarInferenceResult.confidence', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='ascend.presenter.video_analysis.CarInferenceResult.value', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=503,
  serialized_end=708,
)


_MAPTYPE = _descriptor.Descriptor(
  name='MapType',
  full_name='ascend.presenter.video_analysis.MapType',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='ascend.presenter.video_analysis.MapType.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='ascend.presenter.video_analysis.MapType.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=710,
  serialized_end=747,
)


_HUMANINFERENCERESULT = _descriptor.Descriptor(
  name='HumanInferenceResult',
  full_name='ascend.presenter.video_analysis.HumanInferenceResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='frame_index', full_name='ascend.presenter.video_analysis.HumanInferenceResult.frame_index', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='object_id', full_name='ascend.presenter.video_analysis.HumanInferenceResult.object_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='human_property', full_name='ascend.presenter.video_analysis.HumanInferenceResult.human_property', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=750,
  serialized_end=923,
)


_FACEINFERENCERESULT = _descriptor.Descriptor(
  name='FaceInferenceResult',
  full_name='ascend.presenter.video_analysis.FaceInferenceResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='frame_index', full_name='ascend.presenter.video_analysis.FaceInferenceResult.frame_index', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='object_id', full_name='ascend.presenter.video_analysis.FaceInferenceResult.object_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='type', full_name='ascend.presenter.video_analysis.FaceInferenceResult.type', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='confidence', full_name='ascend.presenter.video_analysis.FaceInferenceResult.confidence', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='ascend.presenter.video_analysis.FaceInferenceResult.value', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=926,
  serialized_end=1133,
)

_COMMONRESPONSE.fields_by_name['ret'].enum_type = _ERRORCODE
_IMAGESET.fields_by_name['frame_index'].message_type = _FRAMEINDEX
_IMAGESET.fields_by_name['object'].message_type = _OBJECT
_CARINFERENCERESULT.fields_by_name['frame_index'].message_type = _FRAMEINDEX
_CARINFERENCERESULT.fields_by_name['type'].enum_type = _CARINFERENCETYPE
_HUMANINFERENCERESULT.fields_by_name['frame_index'].message_type = _FRAMEINDEX
_HUMANINFERENCERESULT.fields_by_name['human_property'].message_type = _MAPTYPE
_FACEINFERENCERESULT.fields_by_name['frame_index'].message_type = _FRAMEINDEX
_FACEINFERENCERESULT.fields_by_name['type'].enum_type = _FACEINFERENCETYPE
DESCRIPTOR.message_types_by_name['RegisterApp'] = _REGISTERAPP
DESCRIPTOR.message_types_by_name['CommonResponse'] = _COMMONRESPONSE
DESCRIPTOR.message_types_by_name['FrameIndex'] = _FRAMEINDEX
DESCRIPTOR.message_types_by_name['Object'] = _OBJECT
DESCRIPTOR.message_types_by_name['ImageSet'] = _IMAGESET
DESCRIPTOR.message_types_by_name['CarInferenceResult'] = _CARINFERENCERESULT
DESCRIPTOR.message_types_by_name['MapType'] = _MAPTYPE
DESCRIPTOR.message_types_by_name['HumanInferenceResult'] = _HUMANINFERENCERESULT
DESCRIPTOR.message_types_by_name['FaceInferenceResult'] = _FACEINFERENCERESULT
DESCRIPTOR.enum_types_by_name['ErrorCode'] = _ERRORCODE
DESCRIPTOR.enum_types_by_name['CarInferenceType'] = _CARINFERENCETYPE
DESCRIPTOR.enum_types_by_name['FaceInferenceType'] = _FACEINFERENCETYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

RegisterApp = _reflection.GeneratedProtocolMessageType('RegisterApp', (_message.Message,), dict(
  DESCRIPTOR = _REGISTERAPP,
  __module__ = 'video_analysis_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.video_analysis.RegisterApp)
  ))
_sym_db.RegisterMessage(RegisterApp)

CommonResponse = _reflection.GeneratedProtocolMessageType('CommonResponse', (_message.Message,), dict(
  DESCRIPTOR = _COMMONRESPONSE,
  __module__ = 'video_analysis_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.video_analysis.CommonResponse)
  ))
_sym_db.RegisterMessage(CommonResponse)

FrameIndex = _reflection.GeneratedProtocolMessageType('FrameIndex', (_message.Message,), dict(
  DESCRIPTOR = _FRAMEINDEX,
  __module__ = 'video_analysis_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.video_analysis.FrameIndex)
  ))
_sym_db.RegisterMessage(FrameIndex)

Object = _reflection.GeneratedProtocolMessageType('Object', (_message.Message,), dict(
  DESCRIPTOR = _OBJECT,
  __module__ = 'video_analysis_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.video_analysis.Object)
  ))
_sym_db.RegisterMessage(Object)

ImageSet = _reflection.GeneratedProtocolMessageType('ImageSet', (_message.Message,), dict(
  DESCRIPTOR = _IMAGESET,
  __module__ = 'video_analysis_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.video_analysis.ImageSet)
  ))
_sym_db.RegisterMessage(ImageSet)

CarInferenceResult = _reflection.GeneratedProtocolMessageType('CarInferenceResult', (_message.Message,), dict(
  DESCRIPTOR = _CARINFERENCERESULT,
  __module__ = 'video_analysis_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.video_analysis.CarInferenceResult)
  ))
_sym_db.RegisterMessage(CarInferenceResult)

MapType = _reflection.GeneratedProtocolMessageType('MapType', (_message.Message,), dict(
  DESCRIPTOR = _MAPTYPE,
  __module__ = 'video_analysis_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.video_analysis.MapType)
  ))
_sym_db.RegisterMessage(MapType)

HumanInferenceResult = _reflection.GeneratedProtocolMessageType('HumanInferenceResult', (_message.Message,), dict(
  DESCRIPTOR = _HUMANINFERENCERESULT,
  __module__ = 'video_analysis_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.video_analysis.HumanInferenceResult)
  ))
_sym_db.RegisterMessage(HumanInferenceResult)

FaceInferenceResult = _reflection.GeneratedProtocolMessageType('FaceInferenceResult', (_message.Message,), dict(
  DESCRIPTOR = _FACEINFERENCERESULT,
  __module__ = 'video_analysis_message_pb2'
  # @@protoc_insertion_point(class_scope:ascend.presenter.video_analysis.FaceInferenceResult)
  ))
_sym_db.RegisterMessage(FaceInferenceResult)

# @@protoc_insertion_point(module_scope)
